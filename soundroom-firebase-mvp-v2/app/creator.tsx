
import { useState } from 'react'; import { ScrollView, Text, TextInput, Alert, Image, Pressable } from 'react-native'; import { theme } from '@/lib/theme'; import * as ImagePicker from 'expo-image-picker'; import { auth, db, storage } from '@/lib/firebase'; import { doc, getDoc, setDoc } from 'firebase/firestore'; import { ref, uploadBytes, getDownloadURL } from 'firebase/storage';
export default function Creator(){ const [handle,setHandle]=useState('stephhh'); const [displayName,setDisplayName]=useState('Stephhh'); const [bio,setBio]=useState('Alt-pop/R&B. Neon moods. Houston.'); const [themeColor,setThemeColor]=useState('#22D3EE'); const [avatar,setAvatar]=useState<string|null>(null); const [cover,setCover]=useState<string|null>(null);
const pick=async(setter:(s:string)=>void)=>{ const res=await ImagePicker.launchImageLibraryAsync({mediaTypes:ImagePicker.MediaTypeOptions.Images,quality:0.8}); if(!res.canceled && res.assets?.[0]?.uri) setter(res.assets[0].uri); };
const up=async(local:string|null,path:string)=>{ if(!local) return null; const resp=await fetch(local); const blob=await resp.blob(); const r=ref(storage,path); await uploadBytes(r,blob); return await getDownloadURL(r); };
const submit=async()=>{ if(!auth.currentUser){Alert.alert('Sign in required','Please sign in first.'); return;} const h=handle.trim().toLowerCase(); if(!/^[a-z0-9_]{3,20}$/.test(h)){Alert.alert('Invalid handle','Use 3â€“20 letters, numbers, underscore.'); return;} const refDoc=doc(db,'artists',h); const exists=await getDoc(refDoc); if(exists.exists()){Alert.alert('Handle taken','Choose another.'); return;} const avatarUrl=await up(avatar,`artists/${h}/avatar.jpg`); const coverUrl=await up(cover,`artists/${h}/cover.jpg`); await setDoc(refDoc,{displayName,bio,themeColor,ownerUid:auth.currentUser.uid,avatarUrl:avatarUrl||null,coverUrl:coverUrl||null,createdAt:Date.now()}); Alert.alert('Artist created',`@${h} is live!`); };
return (<ScrollView style={{backgroundColor:theme.bg,padding:16}}><Text style={{color:theme.text,fontSize:24,fontWeight:'800',marginBottom:8}}>Become an artist</Text>
<TextInput value={handle} onChangeText={setHandle} placeholder="@handle" placeholderTextColor={theme.subtext} style={{backgroundColor:theme.card,color:theme.text,borderRadius:12,padding:12,marginBottom:12}}/>
<TextInput value={displayName} onChangeText={setDisplayName} placeholder="Display name" placeholderTextColor={theme.subtext} style={{backgroundColor:theme.card,color:theme.text,borderRadius:12,padding:12,marginBottom:12}}/>
<TextInput value={bio} onChangeText={setBio} placeholder="Short bio" placeholderTextColor={theme.subtext} style={{backgroundColor:theme.card,color:theme.text,borderRadius:12,padding:12,marginBottom:12}} multiline/>
<TextInput value={themeColor} onChangeText={setThemeColor} placeholder="#22D3EE" placeholderTextColor={theme.subtext} style={{backgroundColor:theme.card,color:theme.text,borderRadius:12,padding:12,marginBottom:12}}/>
<Pressable onPress={()=>pick(setAvatar)}><Text style={{color:theme.neon,marginBottom:8}}>Pick avatar</Text></Pressable>{avatar? <Image source={{uri:avatar}} style={{width:96,height:96,borderRadius:999,marginBottom:12}}/>:null}
<Pressable onPress={()=>pick(setCover)}><Text style={{color:theme.neon,marginBottom:8}}>Pick cover</Text></Pressable>{cover? <Image source={{uri:cover}} style={{width:'100%',height:140,borderRadius:12,marginBottom:12}}/>:null}
<Text style={{color:theme.accent}} onPress={submit}>Create artist</Text></ScrollView>); }
