
import { useEffect, useState } from 'react'; import { ScrollView, Text, View, Pressable, TextInput } from 'react-native'; import { theme } from '@/lib/theme'; import { usePlayer } from '@/lib/player'; import { auth, db } from '@/lib/firebase'; import { doc, getDoc, onSnapshot, setDoc, updateDoc } from 'firebase/firestore';
export default function Party(){ const [room,setRoom]=useState('stephhh-room'); const [trackUrl,setTrackUrl]=useState('https://archive.org/download/testmp3testfile/mpthreetest.mp3'); const [isHost,setHost]=useState(false); const {play,pause,resume,stop}=usePlayer();
useEffect(()=>{ const unsub=onSnapshot(doc(db,'parties',room),(snap)=>{ const d=snap.data(); if(d && !isHost){ if(d.action==='play') play(d.trackUrl); if(d.action==='pause') pause(); if(d.action==='resume') resume(); if(d.action==='stop') stop(); } }); return ()=>unsub(); },[room,isHost]);
const ensureRoom=async()=>{ const ref=doc(db,'parties',room); const exists=await getDoc(ref); if(!exists.exists()) await setDoc(ref,{trackUrl,action:'idle',hostUid:auth.currentUser?.uid||null}); };
const send=async(action:string)=>{ const ref=doc(db,'parties',room); await updateDoc(ref,{action,trackUrl,updatedAt:Date.now()}); if(action==='play') await play(trackUrl); if(action==='pause') await pause(); if(action==='resume') await resume(); if(action==='stop') await stop(); };
return (<ScrollView style={{backgroundColor:theme.bg,padding:16}}><Text style={{color:theme.text,fontSize:24,fontWeight:'800',marginBottom:8}}>Listening Party (sync demo)</Text>
<TextInput placeholder="room id" placeholderTextColor={theme.subtext} value={room} onChangeText={setRoom} style={{backgroundColor:theme.card,color:theme.text,borderRadius:12,padding:12,marginBottom:12}}/>
<TextInput placeholder="track url" placeholderTextColor={theme.subtext} value={trackUrl} onChangeText={setTrackUrl} style={{backgroundColor:theme.card,color:theme.text,borderRadius:12,padding:12,marginBottom:12}}/>
<View style={{flexDirection:'row',gap:12,marginBottom:12}}><Pressable onPress={()=>{setHost(True); ensureRoom();}}><Text style={{color:theme.neon}}>Become host</Text></Pressable><Pressable onPress={()=>setHost(False)}><Text style={{color:theme.neon}}>Become listener</Text></Pressable></View>
{isHost? (<View style={{flexDirection:'row',gap:12}}><Pressable onPress={()=>send('play')}><Text style={{color:theme.neon}}>Play</Text></Pressable><Pressable onPress={()=>send('pause')}><Text style={{color:theme.neon}}>Pause</Text></Pressable><Pressable onPress={()=>send('resume')}><Text style={{color:theme.neon}}>Resume</Text></Pressable><Pressable onPress={()=>send('stop')}><Text style={{color:theme.neon}}>Stop</Text></Pressable></View>):(<Text style={{color:theme.subtext}}>Listeningâ€¦ actions will sync from host.</Text>)}</ScrollView>); }
