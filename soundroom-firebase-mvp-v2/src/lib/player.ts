
import { Audio, InterruptionModeAndroid } from 'expo-av'; import { useEffect, useRef, useState } from 'react';
export function usePlayer(){ const sRef=useRef(null as any); const [status,setStatus]=useState<any>(null); useEffect(()=>{Audio.setAudioModeAsync({staysActiveInBackground:true,interruptionModeAndroid:InterruptionModeAndroid.DuckOthers,shouldDuckAndroid:true,allowsRecordingIOS:false,playsInSilentModeIOS:true}); return ()=>{if(sRef.current) sRef.current.unloadAsync();};},[]);
const play=async(url:string,previewSeconds?:number)=>{ if(sRef.current){await sRef.current.unloadAsync(); sRef.current=null;} const {sound}=await Audio.Sound.createAsync({uri:url},{shouldPlay:true}); sRef.current=sound; sound.setOnPlaybackStatusUpdate((s)=>setStatus(s)); if(previewSeconds){ setTimeout(async()=>{try{await sound.stopAsync();}catch{}}, previewSeconds*1000);} }; const pause=async()=>{await sRef.current?.pauseAsync();}; const resume=async()=>{await sRef.current?.playAsync();}; const stop=async()=>{await sRef.current?.stopAsync();}; return {status,play,pause,resume,stop};}
